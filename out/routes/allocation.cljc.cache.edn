;; Analyzed by ClojureScript 1.7.170
{:use-macros {defroutes dogfort.middleware.routes-macros, POST dogfort.middleware.routes-macros, if-let-realised redlobster.macros, let-realised redlobster.macros, ANY dogfort.middleware.routes-macros, GET dogfort.middleware.routes-macros}, :excludes #{}, :name routes.allocation, :imports nil, :requires {redlobster.promise redlobster.promise, anchor.db anchor.db, index routes.index, db anchor.db, anchor.yahoo anchor.yahoo, util anchor.util, yahoo anchor.yahoo, anchor.optimize anchor.optimize, anchor.util anchor.util, routes.index routes.index, optimize anchor.optimize}, :uses nil, :defs {routes {:name routes.allocation/routes, :file "src/routes/allocation.cljc", :line 17, :column 1, :end-line 17, :end-column 18, :meta {:file "/Users/matthew/clojure/anchor/src/routes/allocation.cljc", :line 17, :column 12, :end-line 17, :end-column 18}}}, :require-macros {dogfort.middleware.routes-macros dogfort.middleware.routes-macros, redlobster.macros redlobster.macros, util anchor.util, anchor.util anchor.util}, :cljs.analyzer/constants {:seen #{:get :country-mins :params :country-maxs :stock-max :risk-weighting :post}, :order [:get :post :params :country-mins :country-maxs :stock-max :risk-weighting]}, :doc nil}