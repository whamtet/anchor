;; Analyzed by ClojureScript 1.7.170
{:use-macros {defroutes dogfort.middleware.routes-macros, POST dogfort.middleware.routes-macros, let-realised redlobster.macros, defer-node redlobster.macros, when-realised redlobster.macros, waitp redlobster.macros, promise redlobster.macros, ANY dogfort.middleware.routes-macros, GET dogfort.middleware.routes-macros}, :excludes #{}, :name routes.report, :imports nil, :requires {redlobster.io redlobster.io, redlobster.promise redlobster.promise, report pdf.report, anchor.db anchor.db, io redlobster.io, index routes.index, db anchor.db, promise redlobster.promise, pdf.report pdf.report, util anchor.util, anchor.util anchor.util, routes.index routes.index}, :uses nil, :defs {routes {:name routes.report/routes, :file "src/routes/report.cljs", :line 16, :column 1, :end-line 16, :end-column 18, :meta {:file "/Users/matthew/clojure/anchor/src/routes/report.cljs", :line 16, :column 12, :end-line 16, :end-column 18}}}, :require-macros {dogfort.middleware.routes-macros dogfort.middleware.routes-macros, util anchor.util, anchor.util anchor.util, redlobster.macros redlobster.macros}, :cljs.analyzer/constants {:seen #{:get :headers :status :body :end-stream?}, :order [:get :status :headers :body :end-stream?]}, :doc nil}