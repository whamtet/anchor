;; Analyzed by ClojureScript 1.7.170
{:use-macros {defroutes dogfort.middleware.routes-macros, POST dogfort.middleware.routes-macros, let-realised redlobster.macros, defer-node redlobster.macros, when-realised redlobster.macros, waitp redlobster.macros, promise redlobster.macros, ANY dogfort.middleware.routes-macros, GET dogfort.middleware.routes-macros}, :excludes #{}, :name routes.index2, :imports nil, :requires {redlobster.io redlobster.io, redlobster.promise redlobster.promise, anchor.db anchor.db, io redlobster.io, index routes.index, db anchor.db, promise redlobster.promise, util anchor.util, string clojure.string, anchor.optimize anchor.optimize, anchor.util anchor.util, routes.index routes.index, clojure.string clojure.string, optimize anchor.optimize}, :uses nil, :defs {old-ie? {:protocol-inline nil, :meta {:file "/Users/matthew/clojure/anchor/src/routes/index2.cljc", :line 20, :column 7, :end-line 20, :end-column 14, :arglists (quote ([{:strs [user-agent]}]))}, :name routes.index2/old-ie?, :variadic false, :file "src/routes/index2.cljc", :end-column 14, :method-params ([p__35813]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:strs [user-agent]}]))}, mobile? {:protocol-inline nil, :meta {:file "/Users/matthew/clojure/anchor/src/routes/index2.cljc", :line 24, :column 7, :end-line 24, :end-column 14, :arglists (quote ([{:strs [user-agent]}]))}, :name routes.index2/mobile?, :variadic false, :file "src/routes/index2.cljc", :end-column 14, :method-params ([p__35818]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:strs [user-agent]}]))}, routes {:name routes.index2/routes, :file "src/routes/index2.cljc", :line 27, :column 1, :end-line 27, :end-column 18, :meta {:file "/Users/matthew/clojure/anchor/src/routes/index2.cljc", :line 27, :column 12, :end-line 27, :end-column 18}}}, :require-macros {dogfort.middleware.routes-macros dogfort.middleware.routes-macros, util anchor.util, anchor.util anchor.util, redlobster.macros redlobster.macros}, :cljs.analyzer/constants {:seen #{:get :name :params :headers :status :post :body :endpoint :session}, :order [:get :session :headers :status :body :post :params :endpoint :name]}, :doc nil}