;; Analyzed by ClojureScript 1.7.170
{:use-macros {let-realised redlobster.macros}, :excludes #{}, :name pdf.report, :imports nil, :requires {util anchor.util, anchor.util anchor.util, update-calculations anchor.update-calculations, anchor.update-calculations anchor.update-calculations, cljs-pdfkit cljs-pdfkit.core, cljs-pdfkit.core cljs-pdfkit.core, redlobster.promise redlobster.promise}, :uses nil, :defs {footer-page {:protocol-inline nil, :meta {:file "/Users/matthew/clojure/anchor/src/pdf/report.cljs", :line 9, :column 7, :end-line 9, :end-column 18, :arglists (quote ([body]))}, :name pdf.report/footer-page, :variadic false, :file "/Users/matthew/clojure/anchor/src/pdf/report.cljs", :end-column 18, :method-params ([body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([body]))}, safe-nth {:protocol-inline nil, :meta {:file "/Users/matthew/clojure/anchor/src/pdf/report.cljs", :line 15, :column 7, :end-line 15, :end-column 15, :arglists (quote ([s n]))}, :name pdf.report/safe-nth, :variadic false, :file "/Users/matthew/clojure/anchor/src/pdf/report.cljs", :end-column 15, :method-params ([s n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s n]))}, transpose {:protocol-inline nil, :meta {:file "/Users/matthew/clojure/anchor/src/pdf/report.cljs", :line 19, :column 7, :end-line 19, :end-column 16, :arglists (quote ([table]))}, :name pdf.report/transpose, :variadic false, :file "/Users/matthew/clojure/anchor/src/pdf/report.cljs", :end-column 16, :method-params ([table]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([table]))}, table {:protocol-inline nil, :meta {:file "/Users/matthew/clojure/anchor/src/pdf/report.cljs", :line 26, :column 7, :end-line 26, :end-column 12, :arglists (quote ([rows]))}, :name pdf.report/table, :variadic false, :file "/Users/matthew/clojure/anchor/src/pdf/report.cljs", :end-column 12, :method-params ([rows]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rows]))}, disp-num {:protocol-inline nil, :meta {:file "/Users/matthew/clojure/anchor/src/pdf/report.cljs", :line 43, :column 7, :end-line 43, :end-column 15, :arglists (quote ([x]))}, :name pdf.report/disp-num, :variadic false, :file "/Users/matthew/clojure/anchor/src/pdf/report.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, disp-percent {:protocol-inline nil, :meta {:file "/Users/matthew/clojure/anchor/src/pdf/report.cljs", :line 53, :column 7, :end-line 53, :end-column 19, :arglists (quote ([x]))}, :name pdf.report/disp-percent, :variadic false, :file "/Users/matthew/clojure/anchor/src/pdf/report.cljs", :end-column 19, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, table2 {:protocol-inline nil, :meta {:file "/Users/matthew/clojure/anchor/src/pdf/report.cljs", :line 56, :column 7, :end-line 56, :end-column 13, :arglists (quote ([values]))}, :name pdf.report/table2, :variadic false, :file "/Users/matthew/clojure/anchor/src/pdf/report.cljs", :end-column 13, :method-params ([values]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 1, :fn-var true, :arglists (quote ([values]))}, doc {:protocol-inline nil, :meta {:file "/Users/matthew/clojure/anchor/src/pdf/report.cljs", :line 68, :column 7, :end-line 68, :end-column 10, :arglists (quote ([values]))}, :name pdf.report/doc, :variadic false, :file "/Users/matthew/clojure/anchor/src/pdf/report.cljs", :end-column 10, :method-params ([values]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 1, :fn-var true, :arglists (quote ([values]))}, pdf {:protocol-inline nil, :meta {:file "/Users/matthew/clojure/anchor/src/pdf/report.cljs", :line 77, :column 7, :end-line 77, :end-column 10, :arglists (quote ([]))}, :name pdf.report/pdf, :variadic false, :file "/Users/matthew/clojure/anchor/src/pdf/report.cljs", :end-column 10, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {redlobster.macros redlobster.macros, util anchor.util, anchor.util anchor.util, cljs-pdfkit cljs-pdfkit.core, cljs-pdfkit.core cljs-pdfkit.core}, :cljs.analyzer/constants {:seen #{:font-size :layout :pdf :page :font :title :style :info :translate :text}, :order [:page :text :font :pdf :layout :info :title :style :translate :font-size]}, :doc nil}