;; Analyzed by ClojureScript 1.7.170
{:name graph.viz, :doc nil, :excludes #{}, :use-macros {symzip anchor.util, let-realised redlobster.macros, promise redlobster.macros}, :require-macros {anchor.util anchor.util, redlobster.macros redlobster.macros, dot graph.dot, graph.dot graph.dot}, :uses nil, :requires {dot graph.dot, graph.dot graph.dot, model anchor.model, anchor.model anchor.model, cljs.nodejs cljs.nodejs, stream redlobster.stream, redlobster.stream redlobster.stream, redlobster redlobster.promise, redlobster.promise redlobster.promise}, :imports nil, :defs {child-process {:name graph.viz/child-process, :file "/Users/matthew/clojure/anchor/src/graph/viz.cljs", :line 12, :column 1, :end-line 12, :end-column 19, :meta {:file "/Users/matthew/clojure/anchor/src/graph/viz.cljs", :line 12, :column 6, :end-line 12, :end-column 19}}, dot->svg {:protocol-inline nil, :meta {:file "/Users/matthew/clojure/anchor/src/graph/viz.cljs", :line 15, :column 7, :end-line 15, :end-column 15, :arglists (quote ([s])), :doc "Takes a string containing a GraphViz dot file, and returns a string containing SVG.  This requires that GraphViz\n  is installed on the local machine."}, :name graph.viz/dot->svg, :variadic false, :file "/Users/matthew/clojure/anchor/src/graph/viz.cljs", :end-column 15, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Takes a string containing a GraphViz dot file, and returns a string containing SVG.  This requires that GraphViz\n  is installed on the local machine."}, graph->svg {:name graph.viz/graph->svg, :file "/Users/matthew/clojure/anchor/src/graph/viz.cljs", :line 30, :column 1, :end-line 30, :end-column 16, :meta {:file "/Users/matthew/clojure/anchor/src/graph/viz.cljs", :line 30, :column 6, :end-line 30, :end-column 16}}}}